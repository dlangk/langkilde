---
const {title} = Astro.props;
---

<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>
    <title>{title}</title>
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css2?family=Newsreader:ital,wght@0,400;0,700;1,400;1,700&display=swap"/>

    <style>
        /*--------------------------------------------------------------
          1. Root Variables & Theme Overrides
        --------------------------------------------------------------*/
        :root {
            --bg-color: #f0efea;
            --text-color: #050505;
            --font-size-base: 20px;
            --accent-color: rgba(255, 77, 0, 0.6);
            --text-fade: rgba(87, 87, 87, 0.5);
        }

        .dark {
            --bg-color: #121212;
            --text-color: #f0efea;
            --accent-color: rgba(253, 123, 58, 0.7);
            --text-fade: rgba(240, 240, 240, 0.4);
        }

        /*--------------------------------------------------------------
          2. Global Styles
        --------------------------------------------------------------*/
        :global(body) {
            font-family: "Newsreader", serif;
            font-size: var(--font-size-base);
            font-weight: 400;
            line-height: 1.6;
            color: var(--text-color);
            background-color: var(--bg-color);
            margin: 0;
            padding: 0;
        }

        :global(a) {
            color: inherit;
        }

        @media (max-width: 800px) {
            :global(main.main-inner) {
                padding-top: 4rem;
            }
        }

        /*--------------------------------------------------------------
          3. Layout Container
        --------------------------------------------------------------*/
        .layout-container {
            display: flex;
            align-items: flex-start;
            justify-content: flex-start;
            min-height: 100vh;
        }

        /*--------------------------------------------------------------
          4. Sidebar Styles
        --------------------------------------------------------------*/
        :global(#sidebar) {
            width: 300px;
            flex: 0 0 300px;
            padding: 1.5rem;
            position: sticky;
            top: 1.5rem;
            font-size: 16px;
            background-color: var(--bg-color);
            transition: left 0.3s ease;
            z-index: 999;
        }

        :global(#sidebar ul) {
            list-style: none;
            padding: 0;
        }

        :global(#sidebar ul li) {
            font-family: "Newsreader", serif;
            font-size: 18px;
            color: var(--text-fade);
            font-weight: 400;
            line-height: 35px;
            text-align: left;
        }

        :global(#sidebar a.active) {
            color: var(--accent-color);
        }

        :global(.sidebar-toggle) {
            display: none;
        }

        /* Responsive Sidebar Toggle */
        @media (max-width: 800px) {
            :global(#sidebar) {
                position: fixed;
                top: 3rem; /* below the menu bar */
                left: 0;
                width: 100vw;
                height: calc(100vh - 3rem);
                background: var(--bg-color);
                box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.05);
                overflow-y: auto;
                z-index: 999;
                padding: 2rem 1rem;
                transform: translateY(-100%);
                transition: transform 0.3s ease;
            }

            :global(#sidebar.open) {
                transform: translateY(0);
            }

            :global(.sidebar-toggle) {
                display: flex;
                align-items: center;
                justify-content: space-between;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 3rem;
                background-color: var(--bg-color);
                color: var(--text-color);
                border-bottom: 1px solid var(--text-fade);
                padding: 0 1rem;
                font-size: 1.2rem;
                font-weight: bold;
                z-index: 1000;
                cursor: pointer;
            }

            :global(main),
            :global(main.index-main),
            :global(main.main-inner) {
                padding-top: 4rem;
            }
        }

        /*--------------------------------------------------------------
          5. Main Content Styles
        --------------------------------------------------------------*/

        :global(main) {
            max-width: 675px;
            box-sizing: border-box;
            margin: 0;
            padding: 2rem 1rem;
        }

        :global(main#memes) {
            padding: 2rem 2rem;
        }

        :global(main img) {
            max-width: 100%;
            height: auto;
        }

        /*--------------------------------------------------------------
          6. Post Meta & Title Styles
        --------------------------------------------------------------*/
        :global(.title) {
            font-size: 30px;
            margin-bottom: 0.5rem;
        }

        :global(.post-meta) {
            display: flex;
            align-items: center;
            margin-bottom: 1rem;
            color: var(--text-fade);
            font-size: 1rem;
        }

        :global(.post-meta .pubdate) {
            font-family: "Newsreader", serif;
            font-weight: 400;
            line-height: 32px;
        }

        :global(.post-meta .separator) {
            margin: 0 0.5rem;
            font-family: "Newsreader", serif;
            font-weight: 400;
            line-height: 32px;
            color: var(--text-fade);
        }

        :global(.post-meta .permalink) {
            font-family: "Newsreader", serif;
            text-align: left;
            color: inherit;
        }

        @media (max-width: 600px) {
            :global(.post-meta) {
                font-size: 0.8rem;
            }
        }

        /*--------------------------------------------------------------
          7. Post Content Images
        --------------------------------------------------------------*/
        :global(.post-content img) {
            max-width: 100%;
            height: auto;
        }

        /*--------------------------------------------------------------
          8. Toggle Switch Styles
        --------------------------------------------------------------*/
        .toggle-switch {
            position: fixed;
            top: 1rem;
            right: 1rem;
        }

        .toggle-input {
            opacity: 0;
            width: 0;
            height: 0;
            position: absolute;
        }

        .toggle-label {
            display: block;
            width: 48px;
            height: 24px;
            background-color: #ddd;
            border-radius: 999px;
            position: relative;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .toggle-slider {
            position: absolute;
            height: 20px;
            width: 20px;
            left: 2px;
            top: 2px;
            background-color: #111;
            border-radius: 50%;
            transition: transform 0.2s;
        }

        .toggle-input:checked + .toggle-label {
            background-color: #333;
        }

        .toggle-input:checked + .toggle-label .toggle-slider {
            transform: translateX(24px);
            background-color: #f9f9f9;
        }

        :global(.intro) {
            margin-bottom: 2rem;
        }

        :global(.post-list) {
            margin-top: 2rem;
        }


    </style>

    <script async src={`https://www.googletagmanager.com/gtag/js?id=G-5RX4PLK2Y2}></script>
    <script is:inline>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
    
        gtag('js', new Date());
        gtag('config', '${import.meta.env.PUBLIC_GA4_MEASUREMENT_ID}', {
            page_path: window.location.pathname
        });
    </script>

    </head>

    <body>
    <div
    class="sidebar-toggle"
    onclick="document.getElementById('sidebar').classList.toggle('open')"
    >
    â˜° Menu
    </div>

    <div class="toggle-switch">
    <input
    type="checkbox"
    id="darkModeToggle"
    class="toggle-input"
    />
    <label for="darkModeToggle" class="toggle-label">
    <span class="toggle-slider"></span>
    </label>
    </div>

    <div class="layout-container">
    <slot/>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", () => {
    // 1) Dark-mode toggle (always run)

    const htmlEl = document.documentElement;
    const toggle = document.getElementById("darkModeToggle");
    if (toggle) {
    const stored = localStorage.getItem("theme") || "light";
    if(stored === "dark") {
        htmlEl.classList.add("dark");
        toggle.checked = true;
    }
    toggle.addEventListener("change", () => {
        const isDark = htmlEl.classList.toggle("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
    });
}

    // 2) Dynamically populate ToC if empty

    const toc = document.getElementById("toc");
    if (toc && toc.children.length === 0) {
        document.querySelectorAll("main h2[id]").forEach(heading => {
            const li = document.createElement("li");
            const a = document.createElement("a");
            a.href = `#${heading.id}`;
            a.textContent = heading.textContent;
            li.appendChild(a);
            toc.appendChild(li);
        });
    }

    // 3) Grab in-page sidebar links, bail *only* if none

    const sidebarLinks = document.querySelectorAll("#toc a[href^='#']");
    if (sidebarLinks.length === 0) return;

    let isClickScrolling = false;
    function setActive(id) {
        sidebarLinks.forEach(l => {
            l.classList.toggle("active", l.getAttribute("href") === `#${id}`);
        });
    }

    // initial hash highlight

    if (location.hash) setActive(location.hash.slice(1));
    window.addEventListener("hashchange", () => {
        setActive(location.hash.slice(1));
    });

    // smooth scroll + immediate highlight

    sidebarLinks.forEach(link => {
        link.addEventListener("click", e => {
            e.preventDefault();
            const id = link.getAttribute("href").slice(1);
            const target = document.getElementById(id);
            if (!target) return;

            isClickScrolling = true;
            setActive(id);

            const offset = 15;
            const top = target.getBoundingClientRect().top + pageYOffset - offset;
            window.scrollTo({top, behavior: "smooth"});
            history.pushState(null, "", `#${id}`);

            setTimeout(() => {
                isClickScrolling = false;
            }, 600);
        });
    });

    // scroll-spy with IntersectionObserver

    const headings = Array.from(sidebarLinks).map(l => {
        const el = document.getElementById(l.getAttribute("href").slice(1));
        return el && {id: el.id, element: el};
    }).filter(Boolean);

    const obs = new IntersectionObserver(
        entries => {
            if (isClickScrolling) return;
            entries.forEach(e => {
                if (e.isIntersecting) setActive(e.target.id);
            });
        },
        {root: null, rootMargin: "0px 0px -50% 0px", threshold: 0}
    );
    headings.forEach(h => obs.observe(h.element));

    // highlight last section when scrolled to bottom

    window.addEventListener("scroll", () => {
        const atBottom = window.innerHeight + pageYOffset >= document.documentElement.scrollHeight - 2;
        if (atBottom && !isClickScrolling) {
            const last = sidebarLinks[sidebarLinks.length - 1];
            setActive(last.getAttribute("href").slice(1));
        }
    });

    // auto-close mobile sidebar

    const sidebar = document.getElementById("sidebar");
    if (sidebar && innerWidth < 800) {
        sidebarLinks.forEach(l => {
            l.addEventListener("click", () => sidebar.classList.remove("open"));
        });
    }
});
    </script>
    </body>
    </html>